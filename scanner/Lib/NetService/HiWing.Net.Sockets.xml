<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HiWing.Net.Sockets</name>
    </assembly>
    <members>
        <member name="M:HiWing.Net.Sockets.NetClient.Connect(System.Net.IPEndPoint)">
            <summary>Connect to the computer specified by Host and Port</summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetClient.ConnectCallback(System.IAsyncResult)">
            <summary>Callback for BeginConnect</summary>
            <param name="ar"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.NetClient.Close(System.String)">
            <summary>
            Disconnect the socket, send closing boms if exists.
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:HiWing.Net.Sockets.AsyncSocketEventArgs">
            <summary>
            1vN tcp socket server event arguments 
            </summary>
        </member>
        <member name="P:HiWing.Net.Sockets.AsyncSocketEventArgs.State">
            <summary>
            连接的客户端状态
            </summary>
        </member>
        <member name="T:HiWing.Net.Sockets.AsyncSocketServer">
            <summary>
            1VN tcp server by socket
            </summary>
        </member>
        <member name="P:HiWing.Net.Sockets.AsyncSocketServer.IsRunning">
            <summary>
            获取一个值，指示server是否正在运行
            </summary>
        </member>
        <member name="P:HiWing.Net.Sockets.AsyncSocketServer.Address">
            <summary>
            获取或设置一个值，指示server连接的远程主机终结点IP地址
            </summary>
        </member>
        <member name="P:HiWing.Net.Sockets.AsyncSocketServer.Port">
            <summary>
            获取或设置一个值，指示server连接的远程主机终结点端口号
            </summary>
        </member>
        <member name="P:HiWing.Net.Sockets.AsyncSocketServer.Clients">
            <summary>
            获取一个值，指示同server建立连接的客户端对象
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.#ctor(System.Int32)">
            <summary>
            使用监听端口初始化实例
            </summary>
            <param name="listenPort">socket绑定的端口</param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.#ctor(System.Net.IPEndPoint)">
            <summary>
            使用监听终结点初始化实例
            </summary>
            <param name="localEP">socket绑定的IP终结点</param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.#ctor(System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>
            使用IP地址、监听端口、最大连接数初始化实例
            </summary>
            <param name="localIPAddress">监听IP地址</param>
            <param name="listPort">监听端口</param>
            <param name="maxClient">客户端最大连接数</param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Start">
            <summary>
            启动服务器
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Start(System.Int32)">
            <summary>
            启动服务器
            </summary>
            <param name="backlog">
            服务器所允许的挂起连接序列的最大长度
            </param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Stop">
            <summary>
            停止服务器
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.HandleAcceptConnected(System.IAsyncResult)">
            <summary>
            处理客户端连接
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Send(System.String,System.Byte[])">
            <summary>
            将数据发送至指定ip的客户端
            </summary>
            <param name="clientIp"></param>
            <param name="data"></param>
            <exception cref="T:System.Net.Sockets.SocketException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Send(System.Net.IPEndPoint,System.Byte[])">
            <summary>
            通过IP终结点指定发送的客户端
            </summary>
            <param name="ep"></param>
            <param name="data"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Send(HiWing.Net.Sockets.NetState,System.Byte[])">
            <summary>
            异步发送数据至指定的客户端
            </summary>
            <param name="client">客户端</param>
            <param name="data">报文</param>
        </member>
        <member name="E:HiWing.Net.Sockets.AsyncSocketServer.ClientStateChanged">
            <summary>
            客户端socket状态改变事件. sender - clientSocketState, e - statusChanged.
            </summary>
        </member>
        <member name="E:HiWing.Net.Sockets.AsyncSocketServer.ConnectionRequest">
            <summary>
            远程客户端连接请求事件，在该事件中调用Accept方法以接收连接请求，否则拒绝。
            </summary>
        </member>
        <member name="E:HiWing.Net.Sockets.AsyncSocketServer.ClientConnected">
            <summary>
            与客户端的连接已建立事件
            </summary>
        </member>
        <member name="E:HiWing.Net.Sockets.AsyncSocketServer.ClientDisconnected">
            <summary>
            与客户端的连接已断开事件
            </summary>
        </member>
        <member name="E:HiWing.Net.Sockets.AsyncSocketServer.DataArrived">
            <summary>
            接收到数据事件
            </summary>
        </member>
        <member name="E:HiWing.Net.Sockets.AsyncSocketServer.ErrorReceived">
            <summary>
            异常事件
            </summary>
        </member>
        <member name="E:HiWing.Net.Sockets.AsyncSocketServer.RemoteClosing">
            <summary>
            收到远程socket关闭指令
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.RaiseClientConnected(HiWing.Net.Sockets.NetState)">
            <summary>
            触发客户端连接事件
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.RaiseClientDisconnected(System.String,HiWing.Net.Sockets.NetState)">
            <summary>
            触发客户端连接断开事件
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Close(HiWing.Net.Sockets.NetState)">
            <summary>
            关闭一个与客户端之间的会话
            </summary>
            <param name="state">需要关闭的客户端会话对象</param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Close(System.String)">
            <summary>
            关闭一个与客户端之间的对话
            </summary>
            <param name="ip"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.CloseAllClient">
            <summary>
            关闭所有的客户端会话,与所有的客户端连接会断开
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, 
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.AsyncSocketServer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release 
            both managed and unmanaged resources; <c>false</c> 
            to release only unmanaged resources.</param>
        </member>
        <member name="T:HiWing.Net.Sockets.NetState">
            <summary>
            socket用户类
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetState.#ctor(System.Net.Sockets.Socket,System.Boolean,System.Boolean)">
            <summary>
            使用客户端连接后的套接字初始化新的AsyncSocketState实例
            </summary>
            <param name="cliSock"></param>
            <param name="useBom"></param>
            <param name="useClosing"></param>
        </member>
        <member name="T:HiWing.Net.Sockets.NetSockDataArrivalEventArgs">
            <summary>
            接收数据事件所需参数
            </summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetSockDataArrivalEventArgs.Data">
            <summary>
            接收到的数据
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetSockDataArrivalEventArgs.Deserialize``1">
            <summary>
            使用BinaryFormatter反序列化数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns>序列化成功，返回指定对象的实例，失败，返回default</returns>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.state">
            <summary>Current socket state</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.socket">
            <summary>The socket object, obviously</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.isSending">
            <summary>Keep track of when data is being sent</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.useBom">
            <summary>The boolean which indicates whether use bombytes in sending</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.useClosingBom">
            <summary>The boolean which indicates whether use bombytes to tell the remote socket to close connection</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.sendBuffer">
            <summary>Queue of objects to be sent out</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.byteBuffer">
            <summary>Store incoming bytes to be processed</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.rxHeaderIndex">
            <summary>Position of the bom header in the rxBuffer</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.rxBodyLen">
            <summary>Expected length of the message from the bom header</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.rxBuffer">
            <summary>Buffer of received data</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.bomBytes">
            <summary>Beginning of message indicator</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.closeBytes">
            <summary> </summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.KeepAliveInactivity">
            <summary>TCP inactivity before sending keep-alive packet (ms)</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.KeepAliveInterval">
            <summary>Interval to send keep-alive packet if acknowledgement was not received (ms)</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.connectionTimer">
            <summary>Threaded timer checks if socket is busted</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.ConnectionCheckInterval">
            <summary>Interval for socket checks (ms)</summary>
        </member>
        <member name="P:HiWing.Net.Sockets.NetBase.State">
            <summary>Current state of the socket</summary>
        </member>
        <member name="P:HiWing.Net.Sockets.NetBase.LocalPort">
            <summary>Port the socket control is listening on.</summary>
        </member>
        <member name="E:HiWing.Net.Sockets.NetBase.Connected">
            <summary>Socket is connected</summary>
        </member>
        <member name="E:HiWing.Net.Sockets.NetBase.Disconnected">
            <summary>Socket connection closed</summary>
        </member>
        <member name="E:HiWing.Net.Sockets.NetBase.StateChanged">
            <summary>Socket state has changed</summary>
            <remarks>This has the ability to fire very rapidly during connection / disconnection.</remarks>
        </member>
        <member name="E:HiWing.Net.Sockets.NetBase.DataArrived">
            <summary>Recived a new object</summary>
        </member>
        <member name="E:HiWing.Net.Sockets.NetBase.ErrorReceived">
            <summary>An error has occurred</summary>
        </member>
        <member name="E:HiWing.Net.Sockets.NetBase.RemoteClosing">
            <summary>Remote socket is closing</summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.#ctor">
            <summary>Base constructor sets up buffer and timer</summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.Send(System.Byte[])">
            <summary>Send data</summary>
            <param name="bytes">Bytes to send</param>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.SendNextQueued">
            <summary>Send data for real</summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.SendCallback(System.IAsyncResult)">
            <summary>Callback for BeginSend</summary>
            <param name="ar"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.PossitiveOnClosing">
            <summary>
            Send data to tell the remote socket that local socket is closing.
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.CloseOnly(System.String)">
            <summary>
            Disconnect the socket, donot send anything.
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.Close(System.String)">
            <summary>Disconnect the socket, send closing boms if exists.</summary>
            <param name="reason"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.Receive">
            <summary>Receive data asynchronously</summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.ReceiveCallback(System.IAsyncResult)">
            <summary>Callback for BeginReceive</summary>
            <param name="ar"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.CopyBack">
            <summary>
            Copies the stuff after the current position, back to the start of the stream,
            resizes the stream to only include the new content, and
            limits the capacity to length + another buffer.
            </summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.IndexOfByteInStream(System.IO.MemoryStream,System.Byte)">
            <summary>Find first position the specified byte within the stream, or -1 if not found</summary>
            <param name="ms"></param>
            <param name="find"></param>
            <returns></returns>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.IndexOfBytesInStream(System.IO.MemoryStream,System.Byte[])">
            <summary>Find first position the specified bytes within the stream, or -1 if not found</summary>
            <param name="ms"></param>
            <param name="find"></param>
            <returns></returns>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.OnErrorReceived(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="function"></param>
            <param name="ex"></param>
        </member>
        <member name="T:HiWing.Net.Sockets.NetBase.Tcp_keepalive">
            <summary>Structure for settings keep-alive bytes</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.Tcp_keepalive.onoff">
            <summary>1 = on, 0 = off</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.Tcp_keepalive.keepalivetime">
            <summary>TCP inactivity before sending keep-alive packet (ms)</summary>
        </member>
        <member name="F:HiWing.Net.Sockets.NetBase.Tcp_keepalive.keepaliveinterval">
            <summary>Interval to send keep-alive packet if acknowledgement was not received (ms)</summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetBase.SetKeepAlive">
            <summary>Set up the socket to use TCP keep alive messages</summary>
        </member>
        <member name="T:HiWing.Net.Sockets.SocketState">
            <summary>
            定义用于表示Socket状态的常数
            </summary>
        </member>
        <member name="F:HiWing.Net.Sockets.SocketState.Closed">
            <summary>
            socket已经关闭
            </summary>
        </member>
        <member name="F:HiWing.Net.Sockets.SocketState.Closing">
            <summary>
            socket正在关闭
            </summary>
        </member>
        <member name="F:HiWing.Net.Sockets.SocketState.Connected">
            <summary>
            socket处于连接成功状态
            </summary>
        </member>
        <member name="F:HiWing.Net.Sockets.SocketState.Connecting">
            <summary>
            socket处于尝试连接的状态
            </summary>
        </member>
        <member name="F:HiWing.Net.Sockets.SocketState.Listening">
            <summary>
            socket处于监听的状态
            </summary>
        </member>
        <member name="T:HiWing.Net.Sockets.NetServer">
            <summary>
            1V1 tcp server by socket
            </summary>
        </member>
        <member name="E:HiWing.Net.Sockets.NetServer.ConnectionRequested">
            <summary>A socket has requested a connection</summary>
        </member>
        <member name="M:HiWing.Net.Sockets.NetServer.Listen(System.Int32)">
            <summary>Listen for incoming connections</summary>
            <param name="port">Port to listen on</param>
        </member>
        <member name="M:HiWing.Net.Sockets.NetServer.AcceptCallback(System.IAsyncResult)">
            <summary>Callback for BeginAccept</summary>
            <param name="ar"></param>
        </member>
        <member name="M:HiWing.Net.Sockets.NetServer.Accept(System.Net.Sockets.Socket)">
            <summary>Accept the connection request</summary>
            <param name="client">Client socket to accept</param>
        </member>
    </members>
</doc>
