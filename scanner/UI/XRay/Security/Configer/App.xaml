<Application x:Class="UI.XRay.Security.Configer.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" StartupUri="MainWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModel="clr-namespace:UI.XRay.Gui.Configer.ViewModel"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:viewModel1="clr-namespace:UI.XRay.Security.Configer.ViewModel">
  <Application.Resources>
        <ResourceDictionary>
            <viewModel1:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:UI.XRay.Gui.Configer.ViewModel" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.buttons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.radiobutton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.combobox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.datagrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/baselight.xaml" />
                <ResourceDictionary>
                    <Style TargetType="Button" BasedOn="{StaticResource MetroFlatButton}" />
                    <system:Double x:Key="PageFontSize">18</system:Double>
                    <system:Double x:Key="DialogTitleFontSize">22</system:Double>
                    <system:Double x:Key="SettingPageLeftPanelWidth">340</system:Double>
                    <Thickness x:Key="PageContentMargin">20,5</Thickness>
                    <SolidColorBrush x:Key="SettingMenuBkgBrush" Color="DarkGray" />
                    <SolidColorBrush x:Key="SettingPageBkgBrush" Color="GhostWhite" />
                    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="LightGray" />

                    <Style x:Key="MetroDialogButtonStyle" TargetType="{x:Type Button}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
                        <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource BlackBrush}" />
                        <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource BlackBrush}" />
                        <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
                        <Setter Setter.Property="Control.Padding" Setter.Value="12,4,12,4" />
                        <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Left" />
                        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Center" />
                        <Setter Setter.Property="Control.FontFamily" Setter.Value="{DynamicResource DefaultFont}" />
                        <Setter Setter.Property="Control.FontWeight" Setter.Value="SemiBold" />
                        <Setter Setter.Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate ControlTemplate.TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle" DoubleAnimation.To="0.4" Timeline.Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle" DoubleAnimation.To="1" Timeline.Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Border" DoubleAnimation.To="0.5" Timeline.Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" DoubleAnimation.To="1" Timeline.Duration="0" />
                                                        <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" DoubleAnimation.To="1" Timeline.Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused" />
                                                <VisualState x:Name="PointerFocused" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border Border.Name="Border" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
                                            <Grid>
                                                <Rectangle Rectangle.Name="MouseOverRectangle" Shape.Fill="{DynamicResource WhiteBrush}" UIElement.Opacity="0" />
                                                <Rectangle Rectangle.Name="PressedRectangle" Shape.Fill="{DynamicResource BlackBrush}" UIElement.Opacity="0" />
                                                <ContentPresenter ContentPresenter.Name="ContentPresenter" TextBlock.Foreground="{TemplateBinding Control.Foreground}" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" FrameworkElement.Margin="{TemplateBinding Control.Padding}" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                            </Grid>
                                        </Border>
                                        <Rectangle Rectangle.Name="FocusVisualWhite" UIElement.IsHitTestVisible="False" Shape.Stroke="#FFFFFFFF" Shape.StrokeEndLineCap="Square" Shape.StrokeDashArray="4,1" UIElement.Opacity="0" Shape.StrokeDashOffset="1.5" />
                                        <Rectangle Rectangle.Name="FocusVisualBlack" UIElement.IsHitTestVisible="False" Shape.Stroke="#FF000000" Shape.StrokeEndLineCap="Square" Shape.StrokeDashArray="1,1" UIElement.Opacity="0" Shape.StrokeDashOffset="0.5" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                                            <Setter Setter.Value="{DynamicResource WhiteBrush}" Setter.Property="Control.Foreground" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="PageSectionHeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="22">
                        </Setter>
                        <Setter Property="FontWeight" Value="SemiBold">
                        </Setter>
                        <Setter Property="Margin" Value="0,20,0,20">
                        </Setter>
                        <Setter Property="MaxWidth" Value="400">
                        </Setter>
                        <Setter Property="TextWrapping" Value="Wrap">
                        </Setter>
                        <Setter Property="HorizontalAlignment" Value="Left">
                        </Setter>
                        <Setter Property="VerticalAlignment" Value="Center">
                        </Setter>
                    </Style>
                    <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                        <GradientStop Color="#FFF0F0EA" Offset="0.9" />
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74" />
                    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}" />
                        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="OnChecked1">
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path2">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="displayText">
                                                <DiscreteStringKeyFrame KeyTime="0" Value="OFF" />
                                            </StringAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="OnUnchecked1">
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0" />
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0" />
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path2">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0" />
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="displayText">
                                                <DiscreteStringKeyFrame KeyTime="0" Value="ON" />
                                            </StringAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="displayText">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF63FA00" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Border CornerRadius="10" Background="#FF3B3939" Width="60" Height="20">
                                        <Grid>
                                            <TextBlock x:Name="displayText" Text="ON" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            </TextBlock>
                                            <Path x:Name="path2" Fill="Black">
                                                <Path.Data>
                                                    <GeometryGroup>
                                                        <GeometryGroup.Children>
                                                            <EllipseGeometry Center="10,10" RadiusX="8.5" RadiusY="8.5">
                                                            </EllipseGeometry>
                                                        </GeometryGroup.Children>
                                                    </GeometryGroup>
                                                </Path.Data>
                                            </Path>
                                            <Path x:Name="path1" Fill="#FF818080">
                                                <Path.Data>
                                                    <GeometryGroup>
                                                        <GeometryGroup.Children>
                                                            <EllipseGeometry Center="10,10" RadiusX="7" RadiusY="7">
                                                            </EllipseGeometry>
                                                        </GeometryGroup.Children>
                                                    </GeometryGroup>
                                                </Path.Data>
                                            </Path>
                                            <Path x:Name="path">
                                                <Path.Fill>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FF807F7F" Offset="0" />
                                                        <GradientStop Color="#FF373636" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                                <Path.Data>
                                                    <GeometryGroup>
                                                        <GeometryGroup.Children>
                                                            <EllipseGeometry Center="10,10" RadiusX="8" RadiusY="8">
                                                            </EllipseGeometry>
                                                        </GeometryGroup.Children>
                                                    </GeometryGroup>
                                                </Path.Data>
                                            </Path>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                                            <BeginStoryboard Storyboard="{StaticResource OnChecked1}" />
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                            <BeginStoryboard x:Name="OnUnchecked1_BeginStoryboard" Storyboard="{StaticResource OnUnchecked1}" />
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroToggleButton}">
                        <Setter Property="Width" Value="100">
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="On">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content" Value="Off">
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="BkgButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroFlatButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <BulletDecorator Background="Transparent">
                                        <Border x:Name="bd" HorizontalAlignment="Stretch" Background="Transparent">
                                            <ContentPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                    </BulletDecorator>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="bd" Property="Background" Value="{x:Null}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsEnabled" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="bd" Property="Background" Value="DimGray" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="False" />
                                                <Condition Property="IsEnabled" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="bd" Property="Background" Value="{x:Null}" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="RadioMenuButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MetroRadioButton}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        <Setter Property="Background" Value="White" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="FontSize" Value="22">
                        </Setter>
                        <Setter Property="MinHeight" Value="60">
                        </Setter>
                        <Setter Property="FontWeight" Value="Normal">
                        </Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Left">
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="Storyboard1">
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFAFAFAF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="Storyboard2">
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFAFAFAF" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#D3D3D3" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <BulletDecorator Background="Transparent">
                                        <Border x:Name="bd" HorizontalAlignment="Stretch" Background="Transparent" CornerRadius="0">
                                            <!--<Border.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.OpacityMask>-->
                                            <ContentPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                    </BulletDecorator>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="bd" Property="Background" Value="Green" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter TargetName="bd" Property="Background" Value="{x:Null}" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <!--<Trigger.EnterActions>
                                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                                            </Trigger.EnterActions>-->
                                            <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentColorBrush2}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <!--<MultiTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                            </MultiTrigger.EnterActions>-->
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsChecked" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="bd" Property="Background" Value="DimGray" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <!--<MultiTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                            </MultiTrigger.EnterActions>-->
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsChecked" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentColorBrush}" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>